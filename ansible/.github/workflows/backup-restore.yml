name: Backup and Restore

on:
  schedule:
    - cron: '0 2 * * *'  # Run daily at 2 AM

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backup script
        run: ansible-playbook -i ansible/inventory/production ansible/playbooks/backup.yml

      - name: Upload backup to S3
        uses: appleboy/s3-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          bucket: ${{ secrets.BACKUP_BUCKET_NAME }}
          source: "backups/*.tar.gz"
          target: "backups/"

  restore:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download backup from S3
        uses: appleboy/s3-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          bucket: ${{ secrets.BACKUP_BUCKET_NAME }}
          source: "backups/latest.tar.gz"
          target: "backups/"

      - name: Run restore script
        run: ansible-playbook -i ansible/inventory/production ansible/playbooks/restore.yml