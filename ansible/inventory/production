# Production Inventory
# Ansible managed - do not edit manually

# ====================
# Server Groups
# ====================

# Primary infrastructure servers
[infra_servers]
hetzner_server ansible_host=95.217.106.176 ansible_user=root

# AI/ML related services
[ai_servers]
hetzner_server gpu_profile=cpu  # Using CPU for LocalAI

# Oracle Cloud instances (managed by Terraform)
[oracle_servers]
# Oracle Free Tier instances will be added by Terraform

# Database servers
[database_servers]
hetzner_server  # Hosts PostgreSQL, Neo4j, etc.

# Monitoring and observability stack
[monitoring_servers]
hetzner_server  # Hosts Prometheus, Grafana, Loki

# Reverse proxy and load balancers
[proxy_servers]
hetzner_server  # Hosts Traefik, Nginx, Caddy

# ====================
# Service Groups
# ====================

[local_ai:children]
ai_servers

[postgresql:children]
database_servers

[neo4j:children]
database_servers

[prometheus:children]
monitoring_servers

[grafana:children]
monitoring_servers

[loki:children]
monitoring_servers

[traefik:children]
proxy_servers

[nginx:children]
proxy_servers

[caddy:children]
proxy_servers

# ====================
# Variable Groups
# ====================

[all:vars]
# Python interpreter
ansible_python_interpreter=/usr/bin/python3

# Vault configuration
vault_password_file=~/.vault_pass.txt

# SSH settings
ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
ansible_ssh_private_key_file=~/.ssh/id_rsa

# Privilege escalation
ansible_become=true
ansible_become_method=sudo
ansible_become_user=root

# Performance tuning
ansible_pipelining=true
ansible_ssh_pipelining=true
ansible_ssh_args='-o ControlMaster=auto -o ControlPersist=60s -o ServerAliveInterval=15'

# Environment settings
env=production
timezone=UTC

# Service ports
prometheus_port=9090
grafana_port=3000
loki_port=3100
postgres_port=5432
neo4j_http_port=7474
neo4j_bolt_port=7687

# Deployment settings
deployment_user=deploy
deployment_group=deploy
