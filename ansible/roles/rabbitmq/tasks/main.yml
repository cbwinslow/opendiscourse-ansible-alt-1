---
# RabbitMQ installation and configuration
- name: Install RabbitMQ dependencies
  ansible.builtin.apt:
    name:
      - gnupg
      - apt-transport-https
    state: present
    update_cache: yes
  when: ansible_os_family == 'Debian'
  tags: [rabbitmq, dependencies]

- name: Add RabbitMQ repository key
  ansible.builtin.apt_key:
    url: https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-erlang/gpg.E495BB49CC4BBE5B.key
    keyring: /usr/share/keyrings/rabbitmq.gpg
    state: present
  when: ansible_os_family == 'Debian'
  tags: [rabbitmq, repository]

- name: Add RabbitMQ repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/rabbitmq.gpg] https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-erlang/deb/ubuntu {{ ansible_distribution_release }} main"
    state: present
    filename: rabbitmq
    update_cache: yes
  when: ansible_os_family == 'Debian'
  tags: [rabbitmq, repository]

- name: Install RabbitMQ server
  ansible.builtin.apt:
    name:
      - rabbitmq-server
      - rabbitmq-upgrade
    state: present
    update_cache: yes
  when: ansible_os_family == 'Debian'
  notify:
    - enable rabbitmq
    - start rabbitmq
  tags: [rabbitmq, installation]

- name: Configure RabbitMQ
  ansible.builtin.template:
    src: rabbitmq.conf.j2
    dest: /etc/rabbitmq/rabbitmq.conf
    owner: rabbitmq
    group: rabbitmq
    mode: '0640'
  notify: restart rabbitmq
  tags: [rabbitmq, configuration]

- name: Configure RabbitMQ environment
  ansible.builtin.template:
    src: rabbitmq-env.conf.j2
    dest: /etc/rabbitmq/rabbitmq-env.conf
    owner: rabbitmq
    group: rabbitmq
    mode: '0640'
  notify: restart rabbitmq
  tags: [rabbitmq, configuration]

- name: Ensure RabbitMQ plugins are enabled
  community.rabbitmq.rabbitmq_plugin:
    names: "{{ rabbitmq_plugins }}"
    state: enabled
  notify: restart rabbitmq
  tags: [rabbitmq, plugins]

- name: Ensure RabbitMQ users exist
  community.rabbitmq.user:
    user: "{{ item.user }}"
    password: "{{ item.password }}"
    vhost: "{{ item.vhost | default('/') }}"
    configure_priv: "{{ item.configure_priv | default('.*') }}"
    read_priv: "{{ item.read_priv | default('.*') }}"
    write_priv: "{{ item.write_priv | default('.*') }}"
    tags: "{{ item.tags | default('management') }}"
    state: present
  loop: "{{ rabbitmq_users }}"
  no_log: true
  tags: [rabbitmq, users]

- name: Ensure RabbitMQ vhosts exist
  community.rabbitmq.vhost:
    name: "{{ item }}"
    state: present
  loop: "{{ rabbitmq_vhosts }}"
  tags: [rabbitmq, vhosts]

- name: Ensure RabbitMQ policies exist
  community.rabbitmq.policy:
    name: "{{ item.name }}"
    vhost: "{{ item.vhost | default('/') }}"
    pattern: "{{ item.pattern }}"
    tags: "{{ item.tags }}"
    priority: "{{ item.priority | default(0) }}"
    apply_to: "{{ item.apply_to | default('all') }}"
    state: present
  loop: "{{ rabbitmq_policies }}"
  tags: [rabbitmq, policies]
