version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: langfuse-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - langfuse-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: langfuse-redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./data/redis:/data
    networks:
      - langfuse-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    image: langfuse/langfuse:latest
    container_name: langfuse-server
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://default:${REDIS_PASSWORD}@redis:6379
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      SALT: ${SALT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_SIGNING_PUBLIC_KEY: ${JWT_SIGNING_PUBLIC_KEY}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_REGION: ${S3_REGION}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_FORCE_PATH_STYLE: ${S3_FORCE_PATH_STYLE}
      TRACING_ENABLED: ${TRACING_ENABLED}
      TRACING_SAMPLING_RATE: ${TRACING_SAMPLING_RATE}
      TRACING_JAEGER_AGENT_HOST: ${TRACING_JAEGER_AGENT_HOST}
      TRACING_JAEGER_AGENT_PORT: ${TRACING_JAEGER_AGENT_PORT}
    ports:
      - "3000:3000"
    networks:
      - langfuse-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    image: langfuse/langfuse:latest
    container_name: langfuse-worker
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://default:${REDIS_PASSWORD}@redis:6379
      NODE_ENV: production
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      SALT: ${SALT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_SIGNING_PUBLIC_KEY: ${JWT_SIGNING_PUBLIC_KEY}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_REGION: ${S3_REGION}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_FORCE_PATH_STYLE: ${S3_FORCE_PATH_STYLE}
      TRACING_ENABLED: ${TRACING_ENABLED}
      TRACING_SAMPLING_RATE: ${TRACING_SAMPLING_RATE}
      TRACING_JAEGER_AGENT_HOST: ${TRACING_JAEGER_AGENT_HOST}
      TRACING_JAEGER_AGENT_PORT: ${TRACING_JAEGER_AGENT_PORT}
    command: npm run worker
    networks:
      - langfuse-network

networks:
  langfuse-network:
    driver: bridge
    name: langfuse-network
