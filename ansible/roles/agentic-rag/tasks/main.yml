---
# Agentic RAG - Main Tasks
# This role deploys and manages the Agentic RAG service

- name: Include OS-specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  tags: [install, config]

- name: Create system user and group
  ansible.builtin.user:
    name: "{{ agentic_rag_user }}"
    group: "{{ agentic_rag_group }}"
    system: yes
    create_home: no
    shell: /usr/sbin/nologin
  tags: [install, users]

- name: Create deployment directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: '{{ item.mode | default("0755") }}'
    owner: "{{ agentic_rag_user }}"
    group: "{{ agentic_rag_group }}"
    recurse: yes
  with_items:
    - { path: "{{ agentic_rag_base_dir }}", mode: '0755' }
    - { path: "{{ agentic_rag_base_dir }}/config", mode: '0750' }
    - { path: "{{ agentic_rag_base_dir }}/data", mode: '0750' }
    - { path: "{{ agentic_rag_log_dir }}", mode: '0755' }
    - { path: "{{ agentic_rag_data_dir }}", mode: '0750' }
  notify: restart agentic-rag
  tags: [install, config]

- name: Deploy configuration files
  block:
    - name: Deploy main configuration
      ansible.builtin.template:
        src: agentic-rag-config.yaml.j2
        dest: "{{ agentic_rag_config_file }}"
        mode: '0640'
        owner: "{{ agentic_rag_user }}"
        group: "{{ agentic_rag_group }}"
        validate: 'python3 -m yamllint -c /etc/yamllint/config.yml %s'
      register: config_result
      notify: restart agentic-rag

    - name: Deploy Docker Compose file
      ansible.builtin.template:
        src: docker-compose.yml.j2
        dest: "{{ agentic_rag_compose_file }}"
        mode: '0640'
        owner: "{{ agentic_rag_user }}"
        group: "{{ agentic_rag_group }}"
      register: compose_result
      notify: restart agentic-rag

    - name: Deploy environment file
      ansible.builtin.template:
        src: .env.j2
        dest: "{{ agentic_rag_base_dir }}/.env"
        mode: '0640'
        owner: "{{ agentic_rag_user }}"
        group: "{{ agentic_rag_group }}"
      register: env_result
      notify: restart agentic-rag
  tags: [config]

- name: Ensure Docker is installed and running
  ansible.builtin.include_role:
    name: docker
    tasks_from: main.yml
  vars:
    docker_users:
      - "{{ agentic_rag_user }}"
  tags: [docker, install]

- name: Deploy systemd service
  ansible.builtin.template:
    src: agentic-rag.service.j2
    dest: /etc/systemd/system/agentic-rag.service
    mode: '0644'
    owner: root
    group: root
  register: systemd_result
  notify:
    - daemon-reload
    - enable agentic-rag
  tags: [systemd, service]

- name: Deploy logrotate configuration
  ansible.builtin.template:
    src: logrotate-agentic-rag.j2
    dest: /etc/logrotate.d/agentic-rag
    mode: '0644'
    owner: root
    group: root
  tags: [logrotate]

- name: Ensure service is running
  block:
    - name: Start Agentic RAG service
      ansible.builtin.systemd:
        name: agentic-rag
        state: started
        enabled: yes
        daemon_reload: yes
      register: service_result
      retries: 3
      delay: 10
      until: service_result is success
      notify: verify agentic-rag

    - name: Wait for service to be ready
      ansible.builtin.uri:
        url: "http://localhost:{{ agentic_rag_port }}/health"
        method: GET
        status_code: 200
        timeout: 30
        headers:
          Authorization: "Bearer {{ agentic_rag_api_key | default('') }}"
      register: health_check
      until: health_check.status == 200
      retries: 10
      delay: 10
      changed_when: false
      tags: [service, verify]

- name: Show service status
  ansible.builtin.debug:
    msg: "Agentic RAG service is running and healthy"
  when: health_check.status == 200
  changed_when: false
  tags: [verify]