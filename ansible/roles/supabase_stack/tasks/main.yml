---
- name: "Supabase stack | Ensure role enabled"
  ansible.builtin.debug:
    msg: "supabase_stack_enabled=false -> skipping deployment"
  when: not supabase_stack_enabled | bool

- name: "Supabase stack | Create root directory"
  ansible.builtin.file:
    path: "{{ supabase_stack_root }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  when: supabase_stack_enabled | bool

# Quick inline remediation for apt Signed-By conflict when running only with --tags app
# We remove legacy docker repository lines lacking a signed-by specification so that
# package installs (e.g. git) succeed without pulling in the full docker role.
- name: "Supabase stack | Apt cleanup | Identify apt source list files"
  ansible.builtin.find:
    paths:
      - /etc/apt
      - /etc/apt/sources.list.d
    patterns: '*.list'
    file_type: file
  register: supabase_stack_apt_lists
  when: supabase_stack_enabled | bool

- name: "Supabase stack | Apt cleanup | Remove legacy docker repo lines"
  ansible.builtin.lineinfile:
    path: "{{ item.path }}"
    regexp: '^deb .*download.docker.com'
    state: absent
    backup: false
  loop: "{{ supabase_stack_apt_lists.files }}"
  loop_control:
    label: "{{ item.path }}"
  register: supabase_stack_docker_repo_line_removals
  when: supabase_stack_enabled | bool

- name: "Supabase stack | Apt cleanup | Update cache if removals occurred"
  ansible.builtin.apt:
    update_cache: true
  when: supabase_stack_enabled | bool and (
    supabase_stack_docker_repo_line_removals is defined and
    (supabase_stack_docker_repo_line_removals.results | selectattr('changed','equalto', true) | list | length) > 0)

- name: "Supabase stack | Install git (required for clone)"
  ansible.builtin.package:
    name: git
    state: present
  when: supabase_stack_enabled | bool

- name: "Supabase stack | Clone Supabase repository (shallow)"
  ansible.builtin.git:
    repo: https://github.com/supabase/supabase.git
    dest: "{{ supabase_stack_root }}/supabase"
    version: master
    depth: 1
    update: yes
  register: supabase_git
  when: supabase_stack_enabled | bool

- name: "Supabase stack | Template env file"
  ansible.builtin.template:
    src: supabase.env.j2
    dest: "{{ supabase_stack_root }}/supabase/docker/.env"
    owner: root
    group: root
    mode: '0600'
  when: supabase_stack_enabled | bool
  register: supabase_env

- name: "Supabase stack | Launch/Update services"
  ansible.builtin.command: >
    docker compose -p supabase -f {{ supabase_stack_root }}/supabase/docker/docker-compose.yml up -d
  args:
    chdir: "{{ supabase_stack_root }}/supabase/docker"
  register: supabase_up
  when: supabase_stack_enabled | bool
  changed_when: >-
    supabase_up.stdout is defined and (
    'Creating' in supabase_up.stdout or
    'Recreating' in supabase_up.stdout or
    supabase_git.changed or supabase_env.changed)
  failed_when: supabase_up.rc != 0

- name: "Supabase stack | Optionally attach traefik labels (lightweight approach)"
  ansible.builtin.copy:
    dest: "{{ supabase_stack_root }}/supabase/docker/docker-compose.override.traefik.yml"
    mode: '0644'
    content: |
      version: '3.8'
      services:
        # Only attach traefik labels to existing Supabase 'kong' gateway for now.
        kong:
          labels:
            - "traefik.enable=true"
            - "traefik.http.routers.supabase.rule=Host(`{{ supabase_domain }}`)"
            - "traefik.http.routers.supabase.entrypoints=web"
            - "traefik.http.services.supabase.loadbalancer.server.port=8000"
          networks:
            - traefik_public
      networks:
        traefik_public:
          external: true
  when: supabase_stack_enabled | bool

- name: "Supabase stack | Relaunch with traefik override"
  ansible.builtin.command: >
    docker compose -p supabase -f {{ supabase_stack_root }}/supabase/docker/docker-compose.yml -f {{ supabase_stack_root }}/supabase/docker/docker-compose.override.traefik.yml up -d
  args:
    chdir: "{{ supabase_stack_root }}/supabase/docker"
  register: supabase_up_traefik
  when: supabase_stack_enabled | bool
  changed_when: >-
    supabase_up_traefik.stdout is defined and (
    'Creating' in supabase_up_traefik.stdout or
    'Recreating' in supabase_up_traefik.stdout)
  failed_when: supabase_up_traefik.rc != 0

- name: "Supabase stack | Summary"
  ansible.builtin.debug:
    msg: |
      Supabase deployment complete.
      Git changed: {{ supabase_git.changed | default(false) }}
      Env changed: {{ supabase_env.changed | default(false) }}
      Compose output (truncated): {{ (supabase_up.stdout | default(''))[0:400] }}
      Traefik override output (truncated): {{ (supabase_up_traefik.stdout | default(''))[0:400] }}
  when: supabase_stack_enabled | bool
