---
# Docker role main tasks rewritten for reliability & idempotency

- name: Gather minimal facts (ensure lsb info)
  setup:
    gather_subset:
      - min
      - distribution

- name: Ensure prerequisite packages present
  apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: true
  register: prereq_result

- name: Create keyrings directory
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Add Docker GPG key (atomic)
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
  register: docker_key

- name: Determine architecture and codename
  set_fact:
    docker_arch: "{{ (ansible_architecture in ['x86_64','amd64']) | ternary('amd64', ansible_architecture) }}"
    docker_codename: "{{ ansible_distribution_release | default(ansible_lsb.codename) }}"

- name: Remove any legacy Docker list file (prevent duplicate Signed-By issues)
  file:
    path: /etc/apt/sources.list.d/docker.list
    state: absent

- name: Locate existing apt source list files
  find:
    paths: /etc/apt/sources.list.d
    patterns: '*.list'
    file_type: file
  register: docker_source_lists
  when: ansible_facts.os_family == 'Debian'

- name: Purge stale docker entries (without signed-by) from list files
  lineinfile:
    path: "{{ item.path }}"
    regexp: '^deb .*download.docker.com/linux/ubuntu'
    state: absent
  loop: "{{ docker_source_lists.files }}"
  when: ansible_facts.os_family == 'Debian' and docker_source_lists is defined
  ignore_errors: true

- name: Configure Docker apt repository
  copy:
    dest: /etc/apt/sources.list.d/docker-ce.list
    mode: '0644'
    content: |
      deb [arch={{ docker_arch }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ docker_codename }} stable
  register: docker_repo

- name: Update apt cache if repo changed or key changed
  apt:
    update_cache: true
  when: docker_repo.changed or docker_key.changed or prereq_result.changed

- name: Install Docker Engine packages
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
  register: docker_pkgs

- name: Ensure docker group exists
  group:
    name: docker
    state: present

- name: Add current ansible user to docker group
  user:
    name: "{{ ansible_user | default(ansible_ssh_user | default('root')) }}"
    groups: docker
    append: true

- name: Enable & start Docker service
  systemd:
    name: docker
    enabled: true
    state: started
  register: docker_service

- name: Create standard docker directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /opt/docker
    - /opt/docker/stacks
    - /opt/docker/volumes
    - /opt/docker/config

- name: Ensure /etc/docker exists
  file:
    path: /etc/docker
    state: directory
    mode: '0755'

- name: Install daemon configuration
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: '0644'
  notify: restart docker

- name: Write compose version marker
  copy:
    dest: /opt/docker/.compose-version
    content: "{{ docker_compose_version | default('v2') }}"
    mode: '0644'

- name: Create optional custom network
  when: docker_network_name is defined
  community.docker.docker_network:
    name: "{{ docker_network_name }}"
    driver: bridge
    ipam_config: >-
      {{ [{'subnet': docker_network_subnet, 'gateway': docker_network_gateway}] if (docker_network_subnet is defined and docker_network_gateway is defined) else omit }}
    state: present

- name: Debug summary
  debug:
    msg:
      - "Docker packages changed: {{ docker_pkgs.changed }}"
      - "Docker service changed: {{ docker_service.changed }}"
      - "Repo changed: {{ docker_repo.changed }}"
